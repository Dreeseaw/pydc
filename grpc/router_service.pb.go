// gRPC definitions for router service
//
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: grpc/router_service.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*FieldType_Sval
	//	*FieldType_Fval
	//	*FieldType_Ival
	//	*FieldType_Bval
	Value isFieldType_Value `protobuf_oneof:"value"`
}

func (x *FieldType) Reset() {
	*x = FieldType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType) ProtoMessage() {}

func (x *FieldType) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType.ProtoReflect.Descriptor instead.
func (*FieldType) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{0}
}

func (m *FieldType) GetValue() isFieldType_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *FieldType) GetSval() string {
	if x, ok := x.GetValue().(*FieldType_Sval); ok {
		return x.Sval
	}
	return ""
}

func (x *FieldType) GetFval() float64 {
	if x, ok := x.GetValue().(*FieldType_Fval); ok {
		return x.Fval
	}
	return 0
}

func (x *FieldType) GetIval() int32 {
	if x, ok := x.GetValue().(*FieldType_Ival); ok {
		return x.Ival
	}
	return 0
}

func (x *FieldType) GetBval() bool {
	if x, ok := x.GetValue().(*FieldType_Bval); ok {
		return x.Bval
	}
	return false
}

type isFieldType_Value interface {
	isFieldType_Value()
}

type FieldType_Sval struct {
	Sval string `protobuf:"bytes,1,opt,name=sval,proto3,oneof"`
}

type FieldType_Fval struct {
	Fval float64 `protobuf:"fixed64,2,opt,name=fval,proto3,oneof"`
}

type FieldType_Ival struct {
	Ival int32 `protobuf:"varint,3,opt,name=ival,proto3,oneof"`
}

type FieldType_Bval struct {
	Bval bool `protobuf:"varint,4,opt,name=bval,proto3,oneof"`
}

func (*FieldType_Sval) isFieldType_Value() {}

func (*FieldType_Fval) isFieldType_Value() {}

func (*FieldType_Ival) isFieldType_Value() {}

func (*FieldType_Bval) isFieldType_Value() {}

// Base object type
type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field []*FieldType `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{1}
}

func (x *Object) GetField() []*FieldType {
	if x != nil {
		return x.Field
	}
	return nil
}

// true = success, false = failures
type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{2}
}

func (x *SuccessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SuccessResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InsertCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid   string  `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Table string  `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Obj   *Object `protobuf:"bytes,3,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *InsertCommand) Reset() {
	*x = InsertCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertCommand) ProtoMessage() {}

func (x *InsertCommand) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertCommand.ProtoReflect.Descriptor instead.
func (*InsertCommand) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{3}
}

func (x *InsertCommand) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *InsertCommand) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *InsertCommand) GetObj() *Object {
	if x != nil {
		return x.Obj
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Colname   string     `protobuf:"bytes,1,opt,name=colname,proto3" json:"colname,omitempty"`
	Operation string     `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Val       *FieldType `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{4}
}

func (x *Filter) GetColname() string {
	if x != nil {
		return x.Colname
	}
	return ""
}

func (x *Filter) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Filter) GetVal() *FieldType {
	if x != nil {
		return x.Val
	}
	return nil
}

// Sent to router to begin distributed selects,
// also sent to clients for partials processing
type SelectCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qid       string    `protobuf:"bytes,1,opt,name=qid,proto3" json:"qid,omitempty"`
	Table     string    `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Selectors []string  `protobuf:"bytes,3,rep,name=selectors,proto3" json:"selectors,omitempty"`
	Filters   []*Filter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *SelectCommand) Reset() {
	*x = SelectCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectCommand) ProtoMessage() {}

func (x *SelectCommand) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectCommand.ProtoReflect.Descriptor instead.
func (*SelectCommand) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{5}
}

func (x *SelectCommand) GetQid() string {
	if x != nil {
		return x.Qid
	}
	return ""
}

func (x *SelectCommand) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *SelectCommand) GetSelectors() []string {
	if x != nil {
		return x.Selectors
	}
	return nil
}

func (x *SelectCommand) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Result streamed back to router
type PartialResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qid  string    `protobuf:"bytes,1,opt,name=qid,proto3" json:"qid,omitempty"`
	Objs []*Object `protobuf:"bytes,2,rep,name=objs,proto3" json:"objs,omitempty"`
}

func (x *PartialResult) Reset() {
	*x = PartialResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_router_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialResult) ProtoMessage() {}

func (x *PartialResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_router_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialResult.ProtoReflect.Descriptor instead.
func (*PartialResult) Descriptor() ([]byte, []int) {
	return file_grpc_router_service_proto_rawDescGZIP(), []int{6}
}

func (x *PartialResult) GetQid() string {
	if x != nil {
		return x.Qid
	}
	return ""
}

func (x *PartialResult) GetObjs() []*Object {
	if x != nil {
		return x.Objs
	}
	return nil
}

var File_grpc_router_service_proto protoreflect.FileDescriptor

var file_grpc_router_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x6c, 0x0a, 0x09, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x73, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x04, 0x66, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x04, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x76, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x76, 0x61, 0x6c, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x3b, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x60, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x03, 0x6f, 0x62,
	0x6a, 0x22, 0x6c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x86, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x71, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x6f,
	0x62, 0x6a, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x04, 0x6f, 0x62, 0x6a, 0x73, 0x32, 0xd7, 0x02, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x1e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x1a, 0x1c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1c,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x1c, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44,
	0x72, 0x65, 0x65, 0x73, 0x65, 0x61, 0x77, 0x2f, 0x73, 0x61, 0x6c, 0x6d, 0x6f, 0x6e, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_router_service_proto_rawDescOnce sync.Once
	file_grpc_router_service_proto_rawDescData = file_grpc_router_service_proto_rawDesc
)

func file_grpc_router_service_proto_rawDescGZIP() []byte {
	file_grpc_router_service_proto_rawDescOnce.Do(func() {
		file_grpc_router_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_router_service_proto_rawDescData)
	})
	return file_grpc_router_service_proto_rawDescData
}

var file_grpc_router_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_grpc_router_service_proto_goTypes = []interface{}{
	(*FieldType)(nil),       // 0: RouterService.FieldType
	(*Object)(nil),          // 1: RouterService.Object
	(*SuccessResponse)(nil), // 2: RouterService.SuccessResponse
	(*InsertCommand)(nil),   // 3: RouterService.InsertCommand
	(*Filter)(nil),          // 4: RouterService.Filter
	(*SelectCommand)(nil),   // 5: RouterService.SelectCommand
	(*PartialResult)(nil),   // 6: RouterService.PartialResult
}
var file_grpc_router_service_proto_depIdxs = []int32{
	0, // 0: RouterService.Object.field:type_name -> RouterService.FieldType
	1, // 1: RouterService.InsertCommand.obj:type_name -> RouterService.Object
	0, // 2: RouterService.Filter.val:type_name -> RouterService.FieldType
	4, // 3: RouterService.SelectCommand.filters:type_name -> RouterService.Filter
	1, // 4: RouterService.PartialResult.objs:type_name -> RouterService.Object
	3, // 5: RouterService.RouterService.SendInsert:input_type -> RouterService.InsertCommand
	5, // 6: RouterService.RouterService.SendSelect:input_type -> RouterService.SelectCommand
	2, // 7: RouterService.RouterService.ReceiveReplicas:input_type -> RouterService.SuccessResponse
	6, // 8: RouterService.RouterService.ProcessPartials:input_type -> RouterService.PartialResult
	2, // 9: RouterService.RouterService.SendInsert:output_type -> RouterService.SuccessResponse
	6, // 10: RouterService.RouterService.SendSelect:output_type -> RouterService.PartialResult
	3, // 11: RouterService.RouterService.ReceiveReplicas:output_type -> RouterService.InsertCommand
	5, // 12: RouterService.RouterService.ProcessPartials:output_type -> RouterService.SelectCommand
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_grpc_router_service_proto_init() }
func file_grpc_router_service_proto_init() {
	if File_grpc_router_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_router_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_router_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_router_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_router_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_router_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_router_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_router_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grpc_router_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FieldType_Sval)(nil),
		(*FieldType_Fval)(nil),
		(*FieldType_Ival)(nil),
		(*FieldType_Bval)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_router_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_router_service_proto_goTypes,
		DependencyIndexes: file_grpc_router_service_proto_depIdxs,
		MessageInfos:      file_grpc_router_service_proto_msgTypes,
	}.Build()
	File_grpc_router_service_proto = out.File
	file_grpc_router_service_proto_rawDesc = nil
	file_grpc_router_service_proto_goTypes = nil
	file_grpc_router_service_proto_depIdxs = nil
}
